version: '3.8'

services:
  ipfs-postgres:
    container_name: ipfs-postgres
    image: postgres:16.3-alpine3.20
    ports:
      - "5430:5432"
    volumes:
      - "ipfs-postgres-data:/var/lib/postgresql/data"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-indexer_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeit456$}
    restart: unless-stopped

  ipfs-scheduler:
    container_name: ipfs-scheduler
    build:
      context: ../
      dockerfile: Dockerfile
    command: ["celery", "-A", "scheduler", "worker", "--beat", "-E", "--loglevel=info", "--concurrency=1"]
    depends_on:
      - redis
      - ipfs-postgres
    environment:
      - APIFY_API_KEY=apify_api_eZrqixGZNbC3k4h9xlKTMsym7eCqHZ0F6rN5
      - GRAPH_DB_URL=bolt://neo4j:7687
      - GRAPH_DB_USER=neo4j
      - GRAPH_DB_PASSWORD=KGdkfCHtVumyMN
      - SCRAPE_START_DATE=2024-07-01
      - MAX_ITEMS=1200
      - SCRAPE_TOKEN=TAO
      - REDIS_URL=redis://redis:6379/0
      - INDEXER_INTERVAL_HOURS=24
      - TRIGGER_IMMEDIATE=true
    restart: unless-stopped
    volumes:
      - ./logs:/logs

  ipfs-scheduler-ui:
    container_name: ipfs-scheduler-ui
    image: mher/flower:latest
    ports:
      - "5555:5555"
    command: ["celery", "flower", "--broker=redis://redis:6379/0"]
    depends_on:
      - redis
      - ipfs-scheduler
    restart: unless-stopped

  redis:
    container_name: ipfs-redis
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  ipfs-postgres-data:
